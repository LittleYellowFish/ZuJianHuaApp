//集成模式与组件模式之间的切换
if (isLibrary.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'

}

def config = rootProject.ext

android {
    compileSdkVersion config.android.compileSdkVersion
    defaultConfig {
        minSdkVersion config.android.minSdkVersion
        targetSdkVersion config.android.targetSdkVersion
        versionCode config.android.versionCode
        versionName config.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //阿里ARouter必须加的配置，每个需要跳转的module都需要
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "isDebug", "false"
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "isDebug", "true"
        }
    }
    //强制添加资源文件的前缀，避免不同组件之间资源冲突
    //但是resourcePrefix这个值只能限定xml里面的资源，并不能限定图片资源，所有图片资源仍然需要手动去修改资源名。
    resourcePrefix "search"
    sourceSets {
        main {
            //规避表单冲突
            if (isLibrary.toBoolean()) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'

                //集成开发模式下(release)排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }
}
configurations.all {
    resolutionStrategy.force config.dependencies["support-annotations"]
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    compile project(':basemodule')
    //每个组件必须引入
    annotationProcessor config.dependencies["activityrouter-compiler"]
    //阿里的ARouter
    annotationProcessor config.dependencies["arouter-compiler"]
}
